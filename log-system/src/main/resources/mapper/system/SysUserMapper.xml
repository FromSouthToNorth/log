<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.hyzt.system.mapper.SysUserMapper">

    <resultMap id="SysUserResult" type="SysUser">
        <id property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="realName" column="real_name"/>
        <result property="userType" column="user_type"/>
        <result property="password" column="password"/>
        <result property="avatar" column="avatar"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <collection property="roles" javaType="java.util.List" resultMap="roleResult"/>
    </resultMap>

    <resultMap id="roleResult" type="SysRole">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="dataScope" column="data_scope"/>
        <result property="status" column="status"/>
    </resultMap>


    <sql id="selectSysUser">
        select user.user_id,
               user.user_name,
               user.real_name,
               user.user_type,
               user.password,
               user.avatar,
               user.birthday,
               user.sex,
               user.email,
               user.phone,
               user.status,
               user.del_flag,
               user.create_by,
               user.create_time,
               user.update_by,
               user.update_time,
               r.role_id,
               r.role_name,
               r.role_key,
               r.data_scope,
               r.status as role_status
        from sys_user user
        left join sys_user_role role
        on user.user_id = role.user_id
            left join sys_role r
            on r.role_id = role.role_id
    </sql>

    <select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
        <include refid="selectSysUser"/>
        where user.user_name = #{userName}
    </select>

    <select id="checkUserNameUnique" parameterType="String" resultType="int">
        select count(1)
        from sys_user
        where user_name = #{userName} limit 1
    </select>

    <insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
        insert into sys_user(
        <if test="userId != null and userId != ''">user_id,</if>
        <if test="userName != null and userName != ''">user_name,</if>
        <if test="realName != null and realName != ''">real_name,</if>
        <if test="userType != null">user_type,</if>
        <if test="password != null and password !=''">password,</if>
        <if test="avatar != null and avatar != ''">avatar,</if>
        <if test="birthday != null">birthday,</if>
        <if test="sex != null">sex,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="status != null">status,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        ) values (
        <if test="userId != null and userId != ''">#{userId},</if>
        <if test="userName != null and userName != ''">#{userName},</if>
        <if test="realName != null and realName != ''">#{realName},</if>
        <if test="userType != null">#{userType},</if>
        <if test="password != null and password !=''">#{password},</if>
        <if test="avatar != null and avatar != ''">#{avatar},</if>
        <if test="birthday != null">#{birthday},</if>
        <if test="sex != null">#{sex},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="status != null">#{status},</if>
        <if test="createBy != null and createBy != ''">#{create_by},</if>
        sysdate()
        )
    </insert>

    <select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
        select
               u.user_id,
               u.real_name,
               u.user_name,
               u.email,
               u.avatar,
               u.phone,
               u.password,
               u.sex,
               u.status,
               u.del_flag,
               u.create_by,
               u.create_time
        from sys_user u
        where u.del_flag = '0'
        <if test="userId != null and userId != 0">
            AND u.user_id = #{userId}
        </if>
        <if test="userName != null and userName != ''">
            AND u.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND u.status = #{status}
        </if>
        <if test="phone != null and phone != ''">
            AND u.phone like concat('%', #{phone}, '%')
        </if>
        <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
        </if>
        <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="selectAllocatedList" parameterType="SysUser" resultMap="SysUserResult">
        select distinct u.user_id, u.user_name, u.real_name, u.email, u.phone, u.status, u.create_time
        from sys_user u
        left join sys_user_role ur on u.user_id = ur.user_id
        left join sys_role r on r.role_id = ur.role_id
        where u.del_flag = '0' and r.role_id = #{roleId}
        <if test="userName != null and userName != ''">
            AND u.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="phone != null and phone != ''">
            AND u.phone like concat('%', #{phone}, '%')
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="selectUnallocatedList" parameterType="SysUser" resultMap="SysUserResult">
        select distinct u.user_id, u.user_name, u.real_name, u.email, u.phone, u.status, u.create_time
        from sys_user u
        left join sys_user_role ur on u.user_id = ur.user_id
        left join sys_role r on r.role_id = ur.role_id
        where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
        and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
        <if test="userName != null and userName != ''">
            AND u.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="phone != null and phone != ''">
            AND u.phone like concat('%', #{phone}, '%')
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="selectUserById" parameterType="String" resultMap="SysUserResult">
        <include refid="selectSysUser"/>
        where user.user_id = #{userId}
    </select>

    <update id="updateUser" parameterType="SysUser">
        update sys_user
        <set>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="realName != null and realName != ''">real_name = #{realName},</if>
            <if test="email != null ">email = #{email},</if>
            <if test="phone != null ">phone = #{phone},</if>
            <if test="sex != null and sex != ''">sex = #{sex},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = sysdate()
        </set>
        where user_id = #{userId}
    </update>

    <update id="updateUserAvatar" parameterType="SysUser">
        update sys_user set avatar = #{avatar} where user_name = #{userName}
    </update>

    <update id="resetUserPwd" parameterType="SysUser">
        update sys_user set password = #{password} where user_name = #{userName}
    </update>

    <delete id="deleteUserById" parameterType="String">
        update sys_user set del_flag = 1 where user_id = #{userId}
    </delete>

    <delete id="deleteUserByIds" parameterType="String">
        update sys_user set del_flag = 1 where user_id in
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

    <select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
        select user_id, phone from sys_user where phone = #{phone} limit 1
    </select>

    <select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
        select user_id, email from sys_user where email = #{email} limit 1
    </select>

</mapper>