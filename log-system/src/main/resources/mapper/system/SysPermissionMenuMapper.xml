<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.hyzt.system.mapper.SysPermissionMenuMapper">

    <resultMap id="SysPermissionMenuResult" type="SysPermissionMenu">
        <id     property="menuId"       column="menu_id" />
        <result property="menuName"     column="menu_name" />
        <result property="parentId"     column="parent_id" />
        <result property="orderNum"     column="order_num" />
        <result property="path"         column="path" />
        <result property="component"    column="component" />
        <result property="isFrame"      column="is_frame" />
        <result property="isCache"      column="is_cache" />
        <result property="menuType"     column="menu_type" />
        <result property="visible"      column="visible" />
        <result property="status"       column="status" />
        <result property="perms"        column="perms" />
        <result property="icon"         column="icon" />
        <result property="createBy"     column="create_by" />
        <result property="createTime"   column="create_time" />
        <result property="updateBy"     column="update_by" />
        <result property="updateTime"   column="update_time" />
    </resultMap>

    <sql id="selectPermissionMenu">
        select
            menu_id,
            menu_name,
            parent_id,
            order_num,
            path,
            component,
            is_frame,
            is_cache,
            menu_type,
            visible,
            status,
            ifnull(perms, '') as parms,
            icon,
            create_time
        from sys_permission_menu
    </sql>

    <select id="selectPermissionMenuByUserId" parameterType="String" resultType="String">
        select distinct spm.perms
        from sys_permission_menu spm
                 left join sys_role_permission srp
                           on srp.permission_id = spm.menu_id
                 left join sys_user_role sur
                           on sur.role_id = srp.permission_id
                 left join sys_role r
                           on r.role_id = sur.role_id
        where spm.status = 0 and r.status = 0 and sur.user_id = #{userId}
    </select>
    
    <select id="selectPermissionMenuList" parameterType="SysPermissionMenu" resultMap="SysPermissionMenuResult">
        <include refid="selectPermissionMenu" />
        <where>
            <if test="menuName != null and menuName != ''">
                and menu_name like concat('%', #{menuName}, '%')
            </if>
            <if test="visible != null">
                and visible = #{visible}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            order by parent_id, order_num
        </where>
    </select>

    <select id="selectPermissionMenuListByUserId" parameterType="SysPermissionMenu" resultMap="SysPermissionMenuResult">
        select distinct spm.menu_id,
                        spm.parent_id,
                        spm.menu_name,
                        spm.path,
                        spm.component,
                        spm.visible,
                        spm.status,
                        ifnull(spm.perms, '') as perms,
                        spm.is_frame,
                        spm.is_cache,
                        spm.menu_type,
                        spm.icon,
                        spm.order_num,
                        spm.create_time
        from sys_permission_menu spm
                 left join sys_role_permission srp on spm.menu_id = srp.permission_id
                 left join sys_user_role sur on srp.role_id = sur.role_id
                 left join sys_role se on sur.role_id = se.role_id
        <where>
            <if test="menuName != null and menuName != ''">
                and menu_name like concat('%', #{menuName}, '%')
            </if>
            <if test="visible != null">
                and visible = #{visible}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            order by parent_id, order_num
        </where>
    </select>

    <select id="selectPermissionMenuTreeAll" resultMap="SysPermissionMenuResult">
        select
            distinct
            spm.menu_id,
            spm.parent_id,
            spm.menu_name,
            spm.path,
            spm.component,
            spm.visible,
            spm.status,
            ifnull(spm.perms, '') as perms,
            spm.is_frame,
            spm.is_cache,
            spm.menu_type,
            spm.icon,
            spm.order_num,
            spm.create_time
        from sys_permission_menu spm
        where spm.menu_type in ('M', 'C') and spm.status = 0
        order by spm.parent_id, spm.order_num
    </select>

    <select id="selectMenuListByRoleId" resultType="String">
        select *
        from sys_permission_menu m
                 left join sys_role_permission srp
                           on m.menu_id = srp.permission_id
        where srp.role_id = #{roleId}
        <if test="menuCheckStrictly">
            and m.menu_id not in (select m.parent_id from sys_permission_menu m inner join sys_role_permission rm on m.menu_id = rm.permission_id and rm.role_id = #{roleId})
        </if>
        order by m.parent_id, m.order_num
    </select>

    <select id="selectPermissionMenuTreeByUserId" resultMap="SysPermissionMenuResult">
        select
            distinct
            spm.menu_id,
            spm.parent_id,
            spm.menu_name,
            spm.path,
            spm.component,
            spm.visible,
            spm.status,
            ifnull(spm.perms, '') as perms,
            spm.is_frame,
            spm.is_cache,
            spm.menu_type,
            spm.icon,
            spm.order_num,
            spm.create_time
        from sys_permission_menu spm
                 left join sys_role_permission srp
                           on srp.permission_id = spm.menu_id
                 left join sys_user_role sur
                           on sur.role_id = srp.role_id
                 left join sys_role sr
                           on sr.role_id = sur.role_id
                 left join sys_user su
                           on su.user_id = sur.user_id
        where su.user_id = #{userId} and spm.menu_type in ('M', 'C') and spm.status = 0
        order by spm.parent_id, spm.order_num
    </select>

    <select id="selectMenuById" parameterType="String" resultMap="SysPermissionMenuResult">
        <include refid="selectPermissionMenu"/>
        where menu_id = #{menuId}
    </select>

    <select id="hasChildByMenuId" resultType="Integer">
        select count(1)
        from sys_permission_menu where parent_id = ${menuId};
    </select>

    <insert id="insertMenu" parameterType="SysPermissionMenu">
        insert into sys_permission_menu(
        <if test="menuId != null and menuId != ''">menu_id,</if>
        <if test="parentId != null and parentId != ''">parent_id,</if>
        <if test="menuName != null and menuName != ''">menu_name,</if>
        <if test="orderNum != null and orderNum != ''">order_num,</if>
        <if test="path != null and path != ''">path,</if>
        <if test="component != null and component != ''">component,</if>
        <if test="isFrame != null and isFrame != ''">is_frame,</if>
        <if test="isCache != null and isCache != ''">is_cache,</if>
        <if test="menuType != null and menuType != ''">menu_type,</if>
        <if test="visible != null">visible,</if>
        <if test="status != null">status,</if>
        <if test="perms !=null and perms != ''">perms,</if>
        <if test="icon != null and icon != ''">icon,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="menuId != null and menuId != 0">#{menuId},</if>
        <if test="parentId != null and parentId != 0">#{parentId},</if>
        <if test="menuName != null and menuName != ''">#{menuName},</if>
        <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
        <if test="path != null and path != ''">#{path},</if>
        <if test="component != null and component != ''">#{component},</if>
        <if test="isFrame != null and isFrame != ''">#{isFrame},</if>
        <if test="isCache != null and isCache != ''">#{isCache},</if>
        <if test="menuType != null and menuType != ''">#{menuType},</if>
        <if test="visible != null">#{visible},</if>
        <if test="status != null">#{status},</if>
        <if test="perms !=null and perms != ''">#{perms},</if>
        <if test="icon != null and icon != ''">#{icon},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <update id="updateMenu" parameterType="SysPermissionMenu">
        update sys_permission_menu
        <set>
            <if test="menuName != null and menuName != ''">menu_name = #{menuName},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
            <if test="path != null and path != ''">path = #{path},</if>
            <if test="component != null">component = #{component},</if>
            <if test="query != null">query = #{query},</if>
            <if test="isFrame != null and isFrame != ''">is_frame = #{isFrame},</if>
            <if test="isCache != null and isCache != ''">is_cache = #{isCache},</if>
            <if test="menuType != null and menuType != ''">menu_type = #{menuType},</if>
            <if test="visible != null">visible = #{visible},</if>
            <if test="status != null">status = #{status},</if>
            <if test="perms !=null">perms = #{perms},</if>
            <if test="icon !=null and icon != ''">icon = #{icon},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where menu_id = #{menuId}
    </update>

    <delete id="deleteMenuById" parameterType="String">
        delete from sys_permission_menu where menu_id = #{menuId}
    </delete>

    <select id="checkMenuNameUnique" parameterType="SysPermissionMenu" resultMap="SysPermissionMenuResult">
        <include refid="selectPermissionMenu" />
        where menu_name=#{menuName} and parent_id = #{parentId} limit 1
    </select>

</mapper>